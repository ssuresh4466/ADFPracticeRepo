{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "EmpTable"
				},
				{
					"name": "SalaryTable"
				}
			],
			"sinks": [
				{
					"name": "OutputResult"
				}
			],
			"transformations": [
				{
					"name": "EmpJoinSalaries"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Email as string,",
				"          Phone as string,",
				"          Gender as string,",
				"          Age as string,",
				"          {Job Title} as string,",
				"          {Years Of Experience} as string,",
				"          Salary as string,",
				"          Department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> EmpTable",
				"source(output(",
				"          Name as string,",
				"          Age as string,",
				"          Job as string,",
				"          Salary as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> SalaryTable",
				"EmpTable, SalaryTable join(EmpTable@Age == SalaryTable@Age",
				"     && EmpTable@Salary == SalaryTable@Salary,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> EmpJoinSalaries",
				"EmpJoinSalaries derive(Gender = upper(Gender)) ~> ModifyColumns1",
				"ModifyColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['EmpSalResult.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OutputResult"
			]
		}
	}
}